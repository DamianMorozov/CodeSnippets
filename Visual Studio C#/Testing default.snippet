<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets
  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Testing default</Title>
      <Shortcut>testdef</Shortcut>
      <Description>Paste code</Description>
      <Author>Morozov Damian</Author>
      <SnippetTypes>
        <SnippetType>SurroundsWith</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Code Language="csharp">
        <![CDATA[using NUnit.Framework;
using System.Diagnostics;
	
namespace Namespace.Tests
{
	[TestFixture]
	public class ProgramTests
	{
		/// <summary>
		/// Setup private fields.
		/// </summary>
		[SetUp]
		public void Setup()
		{
			TestContext.WriteLine(@"--------------------------------------------------------------------------------");
			TestContext.WriteLine($$@"{nameof(Setup)} start.");
			// 
			TestContext.WriteLine($$@"{nameof(Setup)} complete.");
		}

		/// <summary>
		/// Reset private fields to default state.
		/// </summary>
		[TearDown]
		public void Teardown()
		{
			TestContext.WriteLine(@"--------------------------------------------------------------------------------");
			TestContext.WriteLine($$@"{nameof(Teardown)} start.");
			// 
			TestContext.WriteLine($$@"{nameof(Teardown)} complete.");
			TestContext.WriteLine(@"--------------------------------------------------------------------------------");
		}

		[Test]
		public void Foo_AreEqual()
		{
			TestContext.WriteLine(@"--------------------------------------------------------------------------------");
			TestContext.WriteLine($$@"{nameof(Foo_AreEqual)} start.");
			var sw = Stopwatch.StartNew();
			
			int actual = default;
			// 
			int expected = default;
			TestContext.WriteLine($$"actual/expected: {actual}");
			Assert.AreEqual(expected, actual);
			
			sw.Stop();
			TestContext.WriteLine($$@"{nameof(Foo_AreEqual)} complete. Elapsed time: {sw.Elapsed}");
		}
	}
}$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>